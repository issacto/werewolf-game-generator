{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/issac/Documents/GitHub/wolfwolf/demo/src/client/pages/room/index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport { hasRoom, getRoomSize, getCharacters, getCharacterPlayers } from \"../../components/functions/fetch\";\nimport { charatersImageMap } from \"../../components/data\";\nimport LinkLogo from \"../../components/images/link.svg\";\nimport RefreshLogo from \"../../components/images/refresh.svg\";\n\nclass RoomPage extends React.Component {\n  static getInitialProps({\n    query\n  }) {\n    return {\n      id: query.id\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"copyCodeToClipboard\", () => {\n      var promise = navigator.clipboard.writeText(this.props.id);\n    });\n\n    this.state = {\n      roomSize: -1,\n      charactersDetails: []\n    };\n  }\n\n  async fetchRoomSize(id) {\n    await getRoomSize(id).then(res => {\n      console.log(res);\n      this.setState({\n        roomSize: res.data\n      });\n      return res.data;\n    }).catch(err => {\n      console.log(\"Error\");\n      console.log(err);\n      return err;\n    });\n  }\n\n  async fetchCharacters(id) {\n    var charactersJson = [];\n    await getCharacters(id).then(res => {\n      console.log(res.data);\n\n      for (var prop in res.data) {\n        //console.log(\"Key:\" + prop);\n        //console.log(\"Value:\" + res.data[prop]);\n        charactersJson.push([prop, res.data[prop]]);\n      }\n\n      this.setState({\n        charactersJson: charactersJson\n      }); //this.setState({charactersJson:res.data});\n\n      return res.data;\n    }).catch(err => {\n      console.log(\"Error\");\n      console.log(err);\n      return err;\n    });\n\n    for (var character of charactersJson) {\n      await getCharacterPlayers(this.props.id, character[0]).then(participants => {\n        console.log(\"participants\");\n        console.log(participants.data);\n        this.setState({\n          charactersDetails: [...this.state.charactersDetails, [character[0], character[1], participants.data]]\n        });\n      });\n      console.log(\"FINALI\");\n      console.log(this.state.charactersDetails);\n    }\n  }\n\n  componentDidMount() {\n    //if room id is not accurate then return to menu\n    hasRoom(this.props.id).then(data => {\n      console.log(\"ejgvhb\");\n      console.log(data.data);\n\n      if (data.data) {\n        this.fetchRoomSize(this.props.id);\n        this.fetchCharacters(this.props.id);\n      } else {\n        Router.push('/menu');\n      }\n\n      ;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"4vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Room number: \", this.props.id, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(LinkLogo, {\n          width: \"3.7vh\",\n          style: {\n            marginLeft: \"3vh\"\n          },\n          onClick: () => this.copyCodeToClipboard()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total number of players: \", this.state.roomSize]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"displayTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"tableHeader\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Participants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Dead \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this), this.state.charactersDetails ? this.state.charactersDetails.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"displayTableImageSection\",\n              children: [charatersImageMap.get(data[0]), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 13\n              }, this), data[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data[2] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: data[2].map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  marginTop: \"1vh\"\n                },\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data[2] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: data[2].map(name => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  flexDirection: \"column\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"  \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 28\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default RoomPage;","map":{"version":3,"sources":["/Users/issac/Documents/GitHub/wolfwolf/demo/src/client/pages/room/index.js"],"names":["React","Router","hasRoom","getRoomSize","getCharacters","getCharacterPlayers","charatersImageMap","LinkLogo","RefreshLogo","RoomPage","Component","getInitialProps","query","id","constructor","props","promise","navigator","clipboard","writeText","state","roomSize","charactersDetails","fetchRoomSize","then","res","console","log","setState","data","catch","err","fetchCharacters","charactersJson","prop","push","character","participants","componentDidMount","render","marginTop","display","justifyContent","alignItems","marginLeft","copyCodeToClipboard","map","get","name","flexDirection"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,OAAR,EAAiBC,WAAjB,EAA6BC,aAA7B,EAA2CC,mBAA3C,QAAqE,kCAArE;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AACnC,SAAOC,eAAP,CAAwB;AAAEC,IAAAA;AAAF,GAAxB,EAAmC;AAC/B,WAAO;AAAEC,MAAAA,EAAE,EAAED,KAAK,CAACC;AAAZ,KAAP;AACH;;AAEHC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,iDAsCG,MAAM;AAC1B,UAAIC,OAAO,GAAGC,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8B,KAAKJ,KAAL,CAAWF,EAAzC,CAAd;AACD,KAxCkB;;AAEjB,SAAKO,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAG,CAAC,CADD;AAEXC,MAAAA,iBAAiB,EAAC;AAFP,KAAb;AAID;;AAED,QAAMC,aAAN,CAAoBV,EAApB,EAAuB;AACrB,UAAMV,WAAW,CAACU,EAAD,CAAX,CAAgBW,IAAhB,CAAqBC,GAAG,IAAI;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKG,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAACI,GAAG,CAACI;AAAd,OAAd;AAAmC,aAAOJ,GAAG,CAACI,IAAX;AAAiB,KAFhD,EAEkDC,KAFlD,CAEwDC,GAAG,IAAI;AAACL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAAqBD,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AAAkB,aAAOA,GAAP;AAAW,KAFlH,CAAN;AAGD;;AAED,QAAMC,eAAN,CAAsBnB,EAAtB,EAAyB;AACvB,QAAIoB,cAAc,GAAE,EAApB;AACA,UAAM7B,aAAa,CAACS,EAAD,CAAb,CAAkBW,IAAlB,CAAuBC,GAAG,IAAI;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACI,IAAhB;;AACA,WAAK,IAAIK,IAAT,IAAiBT,GAAG,CAACI,IAArB,EAA2B;AACzB;AACA;AACAI,QAAAA,cAAc,CAACE,IAAf,CAAoB,CAACD,IAAD,EAAMT,GAAG,CAACI,IAAJ,CAASK,IAAT,CAAN,CAApB;AACD;;AACD,WAAKN,QAAL,CAAc;AAACK,QAAAA,cAAc,EAACA;AAAhB,OAAd,EAPkC,CAQlC;;AACA,aAAOR,GAAG,CAACI,IAAX;AAAiB,KATb,EASeC,KATf,CASqBC,GAAG,IAAI;AAACL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAAqBD,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AAAkB,aAAOA,GAAP;AAAW,KAT/E,CAAN;;AAWA,SAAI,IAAIK,SAAR,IAAqBH,cAArB,EAAoC;AAClC,YAAM5B,mBAAmB,CAAC,KAAKU,KAAL,CAAWF,EAAZ,EAAeuB,SAAS,CAAC,CAAD,CAAxB,CAAnB,CAAgDZ,IAAhD,CAAqDa,YAAY,IAAE;AACvEX,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYU,YAAY,CAACR,IAAzB;AACA,aAAKD,QAAL,CAAc;AAAEN,UAAAA,iBAAiB,EAAC,CAAC,GAAG,KAAKF,KAAL,CAAWE,iBAAf,EAAiC,CAACc,SAAS,CAAC,CAAD,CAAV,EAAcA,SAAS,CAAC,CAAD,CAAvB,EAA2BC,YAAY,CAACR,IAAxC,CAAjC;AAApB,SAAd;AACD,OAJK,CAAN;AAKAH,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWE,iBAAvB;AACD;AACF;;AAMDgB,EAAAA,iBAAiB,GAAE;AACjB;AACApC,IAAAA,OAAO,CAAC,KAAKa,KAAL,CAAWF,EAAZ,CAAP,CAAuBW,IAAvB,CAA4BK,IAAI,IAC9B;AACEH,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACA,IAAjB;;AACA,UAAGA,IAAI,CAACA,IAAR,EAAa;AACX,aAAKN,aAAL,CAAmB,KAAKR,KAAL,CAAWF,EAA9B;AACA,aAAKmB,eAAL,CAAqB,KAAKjB,KAAL,CAAWF,EAAhC;AACD,OAHD,MAIK;AAACZ,QAAAA,MAAM,CAACkC,IAAP,CAAY,OAAZ;AAAqB;;AAAA;AAC5B,KATH;AAWD;;AAGDI,EAAAA,MAAM,GAAG;AACP,wBACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC,KAAX;AAAiBC,UAAAA,OAAO,EAAC,MAAzB;AAAgCC,UAAAA,cAAc,EAAC,QAA/C;AAAwDC,UAAAA,UAAU,EAAC;AAAnE,SAAZ;AAAA,gCACE;AAAA,sCAAiB,KAAK5B,KAAL,CAAWF,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AACA,UAAA,KAAK,EAAC,OADN;AAEA,UAAA,KAAK,EAAE;AAAC+B,YAAAA,UAAU,EAAC;AAAZ,WAFP;AAGA,UAAA,OAAO,EAAE,MAAO,KAAKC,mBAAL;AAHhB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,gDAA+B,KAAKzB,KAAL,CAAWC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAO,QAAA,SAAS,EAAE,cAAlB;AAAA,gCACA;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAQE,KAAKD,KAAL,CAAWE,iBAAX,GAEA,KAAKF,KAAL,CAAWE,iBAAX,CAA6BwB,GAA7B,CAAkCjB,IAAD,iBACjC;AAAA,kCACE;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,0BAAf;AAAA,yBACCvB,iBAAiB,CAACyC,GAAlB,CAAsBlB,IAAI,CAAC,CAAD,CAA1B,CADD,eAEA;AAAA;AAAA;AAAA;AAAA,sBAFA,EAGCA,IAAI,CAAC,CAAD,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAA,sBAAKA,IAAI,CAAC,CAAD;AAAT;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAA,sBAAKA,IAAI,CAAC,CAAD,CAAJ,gBACH;AAAA,wBACGA,IAAI,CAAC,CAAD,CAAJ,CAAQiB,GAAR,CAAaE,IAAD,iBACX;AAAI,gBAAA,KAAK,EAAE;AAACR,kBAAAA,SAAS,EAAC;AAAX,iBAAX;AAAA,0BAA+BQ;AAA/B;AAAA;AAAA;AAAA;AAAA,sBADD;AADH;AAAA;AAAA;AAAA;AAAA,oBADG,GAKI;AALT;AAAA;AAAA;AAAA;AAAA,kBAVF,eAiBE;AAAA,sBACCnB,IAAI,CAAC,CAAD,CAAJ,gBACC;AAAA,wBACGA,IAAI,CAAC,CAAD,CAAJ,CAAQiB,GAAR,CAAaE,IAAD,iBACX;AAAK,gBAAA,KAAK,EAAE;AAACP,kBAAAA,OAAO,EAAC,MAAT;AAAgBQ,kBAAAA,aAAa,EAAC;AAA9B,iBAAZ;AAAA,uCACE;AAAA,gDAAS;AAAO,oBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,0BAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADD;AADH;AAAA;AAAA;AAAA;AAAA,oBADD,GAQQ;AATT;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CAFA,GAgCC,IAxCH;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAyDD;;AAzHoC;;AA4HvC,eAAexC,QAAf","sourcesContent":["import React from 'react'\nimport Router from 'next/router'\nimport {hasRoom, getRoomSize,getCharacters,getCharacterPlayers} from \"../../components/functions/fetch\"\nimport {charatersImageMap} from \"../../components/data\";\nimport LinkLogo from \"../../components/images/link.svg\";\nimport RefreshLogo from \"../../components/images/refresh.svg\";\n\nclass RoomPage extends React.Component {\n    static getInitialProps ({ query }) {\n        return { id: query.id}\n    }\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      roomSize : -1,\n      charactersDetails:[]\n    };\n  }\n\n  async fetchRoomSize(id){\n    await getRoomSize(id).then(res => { \n      console.log(res)\n      this.setState({roomSize:res.data});return res.data;}).catch(err => {console.log(\"Error\");console.log(err); return err})\n  };\n\n  async fetchCharacters(id){\n    var charactersJson =[] \n    await getCharacters(id).then(res => { \n      console.log(res.data)\n      for (var prop in res.data) {\n        //console.log(\"Key:\" + prop);\n        //console.log(\"Value:\" + res.data[prop]);\n        charactersJson.push([prop,res.data[prop]]);  \n      }\n      this.setState({charactersJson:charactersJson})\n      //this.setState({charactersJson:res.data});\n      return res.data;}).catch(err => {console.log(\"Error\");console.log(err); return err})\n\n    for(var character of charactersJson){\n      await getCharacterPlayers(this.props.id,character[0]).then(participants=>{\n        console.log(\"participants\")\n        console.log(participants.data)\n        this.setState({ charactersDetails:[...this.state.charactersDetails,[character[0],character[1],participants.data]]})\n      })\n      console.log(\"FINALI\")\n      console.log(this.state.charactersDetails)\n    }\n  };\n\n  copyCodeToClipboard = () => {\n    var promise = navigator.clipboard.writeText(this.props.id)\n  }\n\n  componentDidMount(){\n    //if room id is not accurate then return to menu\n    hasRoom(this.props.id).then(data=>\n      {\n        console.log(\"ejgvhb\")\n        console.log(data.data)\n        if(data.data){\n          this.fetchRoomSize(this.props.id)\n          this.fetchCharacters(this.props.id)\n        }\n        else {Router.push('/menu')};\n      }\n    )\n  }\n  \n\n  render() {\n    return (\n    <div className=\"room\">\n      <div style={{marginTop:\"4vh\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\n        <p>Room number: {this.props.id} </p>\n        <LinkLogo \n        width=\"3.7vh\" \n        style={{marginLeft:\"3vh\"}} \n        onClick={() =>  this.copyCodeToClipboard()}/>\n      </div>\n      <div>Total number of players: {this.state.roomSize}</div>\n      <table className= \"displayTable\">\n      <tr className=\"tableHeader\">\n        <td>Role</td>\n        <td>Number</td>\n        <td>Participants</td>\n        <td>Dead </td>\n      </tr>\n      {\n        this.state.charactersDetails?\n        \n        this.state.charactersDetails.map((data) =>\n        <tr>\n          <td>\n            <div className=\"displayTableImageSection\">\n            {charatersImageMap.get(data[0])}\n            <br/>\n            {data[0]}\n            \n            </div>\n          </td>\n          <td>{data[1]}</td>\n          <td>{data[2]?\n            <div>\n              {data[2].map((name)=>\n                <li style={{marginTop:\"1vh\"}}>{name}</li>\n              )}\n            </div>:null}\n          </td>\n          <td>\n          {data[2]?\n            <div>\n              {data[2].map((name)=>\n                <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                  <label>  <input type=\"checkbox\"/>\n                  </label>\n                </div>\n              )}\n            </div>:null}\n              </td>\n        </tr>)\n        :null\n      }\n      </table>\n      \n    </div>\n    \n    )\n  }\n}\n\nexport default RoomPage"]},"metadata":{},"sourceType":"module"}