{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/issac/Documents/GitHub/wolfwolf/demo/src/client/pages/room/index.js\";\nimport React from 'react';\nimport Router from 'next/router';\nimport { hasRoom, getRoomSize, getCharacters, getCharacterPlayers } from \"../../components/functions/fetch\";\nimport { charatersImageMap } from \"../../components/data\";\n\nclass RoomPage extends React.Component {\n  static getInitialProps({\n    query\n  }) {\n    return {\n      id: query.id\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      roomSize: -1,\n      charactersDetails: []\n    };\n  }\n\n  async fetchRoomSize(id) {\n    await getRoomSize(id).then(res => {\n      console.log(res);\n      this.setState({\n        roomSize: res.data\n      });\n      return res.data;\n    }).catch(err => {\n      console.log(\"Error\");\n      console.log(err);\n      return err;\n    });\n  }\n\n  async fetchCharacters(id) {\n    var charactersJson = [];\n    await getCharacters(id).then(res => {\n      console.log(res.data);\n\n      for (var prop in res.data) {\n        //console.log(\"Key:\" + prop);\n        //console.log(\"Value:\" + res.data[prop]);\n        charactersJson.push([prop, res.data[prop]]);\n      }\n\n      this.setState({\n        charactersJson: charactersJson\n      }); //this.setState({charactersJson:res.data});\n\n      return res.data;\n    }).catch(err => {\n      console.log(\"Error\");\n      console.log(err);\n      return err;\n    });\n\n    for (var character of charactersJson) {\n      getCharacterPlayers(this.props.id, character[0]).then(participants => {\n        console.log(\"participants\");\n        console.log(participants.data);\n        this.state.charactersDetails.push(character[0], character[1], participants.data);\n      });\n      console.log(\"FINALI\");\n    }\n  }\n\n  componentDidMount() {\n    //if room id is not accurate then return to menu\n    hasRoom(this.props.id).then(data => {\n      console.log(\"ejgvhb\");\n      console.log(data.data);\n\n      if (data.data) {\n        this.fetchRoomSize(this.props.id);\n        this.fetchCharacters(this.props.id);\n      } else {\n        Router.push('/menu');\n      }\n\n      ;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"4vh\"\n        },\n        children: [\"Room number: \", this.props.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total number of players: \", this.state.roomSize]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"displayTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"tableHeader\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Participants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), this.state.charactersDetails ? this.state.charactersDetails.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"displayTableImageSection\",\n              children: [charatersImageMap.get(data[0]), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 13\n              }, this), data[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default RoomPage;","map":{"version":3,"sources":["/Users/issac/Documents/GitHub/wolfwolf/demo/src/client/pages/room/index.js"],"names":["React","Router","hasRoom","getRoomSize","getCharacters","getCharacterPlayers","charatersImageMap","RoomPage","Component","getInitialProps","query","id","constructor","props","state","roomSize","charactersDetails","fetchRoomSize","then","res","console","log","setState","data","catch","err","fetchCharacters","charactersJson","prop","push","character","participants","componentDidMount","render","marginTop","map","get"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Router from 'next/router'\nimport {hasRoom, getRoomSize,getCharacters,getCharacterPlayers} from \"../../components/functions/fetch\"\nimport {charatersImageMap} from \"../../components/data\"\nclass RoomPage extends React.Component {\n    static getInitialProps ({ query }) {\n        return { id: query.id}\n    }\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      roomSize : -1,\n      charactersDetails:[]\n    };\n  }\n\n  async fetchRoomSize(id){\n    await getRoomSize(id).then(res => { \n      console.log(res)\n      this.setState({roomSize:res.data});return res.data;}).catch(err => {console.log(\"Error\");console.log(err); return err})\n  };\n\n  async fetchCharacters(id){\n    var charactersJson =[] \n    await getCharacters(id).then(res => { \n      console.log(res.data)\n      for (var prop in res.data) {\n        //console.log(\"Key:\" + prop);\n        //console.log(\"Value:\" + res.data[prop]);\n        charactersJson.push([prop,res.data[prop]]);  \n      }\n      this.setState({charactersJson:charactersJson})\n      //this.setState({charactersJson:res.data});\n      return res.data;}).catch(err => {console.log(\"Error\");console.log(err); return err})\n\n    for(var character of charactersJson){\n      getCharacterPlayers(this.props.id,character[0]).then(participants=>{\n        console.log(\"participants\")\n        console.log(participants.data)\n        this.state.charactersDetails.push(character[0],character[1],participants.data)\n      })\n      console.log(\"FINALI\")\n    }\n  };\n\n\n  componentDidMount(){\n    //if room id is not accurate then return to menu\n    hasRoom(this.props.id).then(data=>\n      {\n        console.log(\"ejgvhb\")\n        console.log(data.data)\n        if(data.data){\n          this.fetchRoomSize(this.props.id)\n          this.fetchCharacters(this.props.id)\n        }\n        else {Router.push('/menu')};\n      }\n      \n    )\n    \n  }\n  \n\n  render() {\n    return (\n    <div className=\"room\">\n      <div style={{marginTop:\"4vh\"}}>Room number: {this.props.id}</div>\n      <div>Total number of players: {this.state.roomSize}</div>\n      <table className= \"displayTable\">\n      <tr className=\"tableHeader\">\n        <td>Role</td>\n        <td>Number</td>\n        <td>Participants</td>\n      </tr>\n      {\n        this.state.charactersDetails?\n        \n        this.state.charactersDetails.map((data) =>\n        <tr>\n          <td>\n            <div className=\"displayTableImageSection\">\n            {charatersImageMap.get(data[0])}\n            <br/>\n            {data[0]}\n            \n            </div>\n          </td>\n          <td>{data[1]}</td>\n          <td>{data[2]}</td>\n        </tr>)\n        :null\n      }\n      </table>\n      \n    </div>\n    \n    )\n  }\n}\n\nexport default RoomPage"]},"metadata":{},"sourceType":"module"}