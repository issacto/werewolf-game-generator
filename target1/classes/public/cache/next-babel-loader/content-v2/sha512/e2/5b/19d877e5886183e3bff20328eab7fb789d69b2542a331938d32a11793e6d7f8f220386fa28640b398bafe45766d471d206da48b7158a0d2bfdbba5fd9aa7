{"ast":null,"code":"import axios from 'axios';\nexport const getRoom = async numberOfPeople => {\n  //const promise =axios.get(\"/api/reviews/comments/\"+userData );\n  const dataPromise = await axios.get(\"http://localhost:8080/getRoom?size=\" + numberOfPeople).then(response => {\n    console.log(\"response\");\n    console.log(response.data);\n    return response;\n  }).catch(err => {\n    console.log(\"Error:\");\n    return null;\n  });\n  return dataPromise;\n};\nexport const hasRoom = async id => {\n  //const promise =axios.get(\"/api/reviews/comments/\"+userData );\n  const dataPromise = await axios.get(\"http://localhost:8080/hasRoom?id=\" + id).then(response => {\n    console.log(\"response\");\n    console.log(response.data);\n    return response;\n  }).catch(err => {\n    console.log(\"Error:\");\n    return null;\n  });\n  return dataPromise;\n};\nexport const getRoomSize = async id => {\n  //const promise =axios.get(\"/api/reviews/comments/\"+userData );\n  const dataPromise = await axios.get(\"http://localhost:8080/getRoomSize?id=\" + id).then(response => {\n    console.log(\"response\");\n    console.log(response.data);\n    return response;\n  }).catch(err => {\n    console.log(\"Error:\");\n    return null;\n  });\n  return dataPromise;\n};\nexport const getPublicRoom = async id => {\n  //const promise =axios.get(\"/api/reviews/comments/\"+userData );\n  const dataPromise = await axios.get(\"http://localhost:8080/getPublicRoom?id=\" + id).then(response => {\n    console.log(\"response\");\n    console.log(response.data);\n    return response;\n  }).catch(err => {\n    console.log(\"Error:\");\n    return null;\n  });\n  return dataPromise;\n};\nexport const putCharacters = async (id, charactersName, charactersSize) => {\n  //const promise =axios.get(\"/api/reviews/comments/\"+userData );\n  const dataPromise = await axios.get(\"http://localhost:8080/putCharacters?id=\" + id, {\n    params: {\n      charactersName: charactersName,\n      charactersSize: charactersSize,\n      paramsSerializer: params => {\n        return qs.stringify(params);\n      }\n    }\n  }).then(response => {\n    console.log(\"response\");\n    console.log(response.data);\n    return response;\n  }).catch(err => {\n    console.log(\"Error:\");\n    return null;\n  });\n  return dataPromise;\n};","map":{"version":3,"sources":["/Users/issac/Documents/GitHub/wolfwolf/demo/src/client/components/functions/fetch.js"],"names":["axios","getRoom","numberOfPeople","dataPromise","get","then","response","console","log","data","catch","err","hasRoom","id","getRoomSize","getPublicRoom","putCharacters","charactersName","charactersSize","params","paramsSerializer","qs","stringify"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n\nexport const  getRoom = async (numberOfPeople) => {\n    //const promise =axios.get(\"/api/reviews/comments/\"+userData );\n    const dataPromise =  await axios.get(\"http://localhost:8080/getRoom?size=\"+numberOfPeople).then((response) => {console.log(\"response\");console.log(response.data);return response}).catch(err => {console.log(\"Error:\");return null})\n    \n    return dataPromise;\n};\n\n\nexport const  hasRoom = async (id) => {\n    //const promise =axios.get(\"/api/reviews/comments/\"+userData );\n    const dataPromise =  await axios.get(\"http://localhost:8080/hasRoom?id=\"+id).then((response) => {console.log(\"response\");console.log(response.data);return response}).catch(err => {console.log(\"Error:\");return null})\n    \n    return dataPromise;\n}\n\n\nexport const  getRoomSize = async (id) => {\n    //const promise =axios.get(\"/api/reviews/comments/\"+userData );\n    const dataPromise =  await axios.get(\"http://localhost:8080/getRoomSize?id=\"+id).then((response) => {console.log(\"response\");console.log(response.data);return response}).catch(err => {console.log(\"Error:\");return null})\n    \n    return dataPromise;\n}\n\nexport const  getPublicRoom = async (id) => {\n    //const promise =axios.get(\"/api/reviews/comments/\"+userData );\n    const dataPromise =  await axios.get(\"http://localhost:8080/getPublicRoom?id=\"+id).then((response) => {console.log(\"response\");console.log(response.data);return response}).catch(err => {console.log(\"Error:\");return null})\n    \n    return dataPromise;\n}\n\n\nexport const  putCharacters = async (id,charactersName, charactersSize) => {\n    //const promise =axios.get(\"/api/reviews/comments/\"+userData );\n    const dataPromise =  await axios.get(\"http://localhost:8080/putCharacters?id=\"+id, { params: { charactersName: charactersName,charactersSize:charactersSize, paramsSerializer: params => {\n        return qs.stringify(params)}  }}).then((response) => {console.log(\"response\");console.log(response.data);return response}).catch(err => {console.log(\"Error:\");return null})\n    \n    return dataPromise;\n}"]},"metadata":{},"sourceType":"module"}