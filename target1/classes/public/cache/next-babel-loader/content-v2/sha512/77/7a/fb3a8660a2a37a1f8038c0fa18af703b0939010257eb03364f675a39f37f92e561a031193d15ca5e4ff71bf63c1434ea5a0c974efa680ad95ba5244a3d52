{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport { hasRoom, getRoomSize, getCharacters, getCharacterPlayers } from \"../../components/functions/fetch\";\nimport { charatersImageMap, charatersColorMap } from \"../../components/data\";\nimport LinkLogo from \"../../components/images/link.svg\";\nimport RefreshLogo from \"../../components/images/refresh.svg\";\n\nclass RoomPage extends React.Component {\n  static getInitialProps({\n    query\n  }) {\n    return {\n      id: query.id\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"copyCodeToClipboard\", () => {\n      var promise = navigator.clipboard.writeText(this.props.id);\n    });\n\n    _defineProperty(this, \"refresh\", () => {\n      Router.reload(window.location.pathname);\n    });\n\n    this.state = {\n      roomSize: -1,\n      charactersDetails: []\n    };\n  }\n\n  async fetchRoomSize(id) {\n    await getRoomSize(id).then(res => {\n      console.log(res);\n      this.setState({\n        roomSize: res.data\n      });\n      return res.data;\n    }).catch(err => {\n      console.log(\"Error\");\n      console.log(err);\n      return err;\n    });\n  }\n\n  async fetchCharacters(id) {\n    var charactersJson = [];\n    await getCharacters(id).then(res => {\n      console.log(res.data);\n\n      for (var prop in res.data) {\n        charactersJson.push([prop, res.data[prop]]);\n      }\n\n      this.setState({\n        charactersJson: charactersJson\n      });\n      return res.data;\n    }).catch(err => {\n      console.log(\"Error\");\n      console.log(err);\n      return err;\n    });\n\n    for (var character of charactersJson) {\n      await getCharacterPlayers(this.props.id, character[0]).then(participants => {\n        console.log(\"participants\");\n        console.log(participants.data);\n        this.setState({\n          charactersDetails: [...this.state.charactersDetails, [character[0], character[1], participants.data]]\n        });\n      });\n      console.log(\"FINALI\");\n      console.log(this.state.charactersDetails);\n    }\n  }\n\n  componentDidMount() {\n    //if room id is not there then return to menu\n    hasRoom(this.props.id).then(data => {\n      console.log(data.data);\n\n      if (data.data) {\n        this.fetchRoomSize(this.props.id);\n        this.fetchCharacters(this.props.id);\n      } else {\n        Router.push('/menu');\n      }\n\n      ;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          marginTop: \"4vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxs(\"p\", {\n          children: [\"Room number: \", this.props.id, \" \"]\n        }), /*#__PURE__*/_jsx(LinkLogo, {\n          width: \"3.7vh\",\n          style: {\n            marginLeft: \"3vh\"\n          },\n          onClick: () => this.copyCodeToClipboard()\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          marginTop: \"2vh\"\n        },\n        children: [\"Total number of players: \", this.state.roomSize]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          marginTop: \"2vh\"\n        },\n        children: /*#__PURE__*/_jsx(RefreshLogo, {\n          width: \"3.7vh\",\n          height: \"3.7vh\",\n          onClick: () => this.refresh()\n        })\n      }), /*#__PURE__*/_jsxs(\"table\", {\n        className: \"displayTable\",\n        children: [/*#__PURE__*/_jsxs(\"tr\", {\n          className: \"tableHeader\",\n          children: [/*#__PURE__*/_jsx(\"td\", {\n            children: \"Role\"\n          }), /*#__PURE__*/_jsx(\"td\", {\n            children: \"Number\"\n          }), /*#__PURE__*/_jsx(\"td\", {\n            children: \"Participants\"\n          }), /*#__PURE__*/_jsx(\"td\", {\n            children: \"Dead \"\n          })]\n        }), this.state.charactersDetails ? this.state.charactersDetails.map(data => /*#__PURE__*/_jsxs(\"tr\", {\n          style: {\n            color: charatersColorMap.get(data[0])\n          },\n          children: [/*#__PURE__*/_jsx(\"td\", {\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"displayTableImageSection\",\n              children: [charatersImageMap.get(data[0]), /*#__PURE__*/_jsx(\"br\", {}), data[0]]\n            })\n          }), /*#__PURE__*/_jsx(\"td\", {\n            children: data[1]\n          }), /*#__PURE__*/_jsx(\"td\", {\n            children: data[2] ? /*#__PURE__*/_jsx(\"div\", {\n              children: data[2].map(name => /*#__PURE__*/_jsx(\"li\", {\n                style: {\n                  marginTop: \"1vh\"\n                },\n                children: name\n              }))\n            }) : null\n          }), /*#__PURE__*/_jsx(\"td\", {\n            children: data[2] ? /*#__PURE__*/_jsx(\"div\", {\n              children: data[2].map(name => /*#__PURE__*/_jsx(\"div\", {\n                style: {\n                  display: \"flex\",\n                  flexDirection: \"column\"\n                },\n                children: /*#__PURE__*/_jsxs(\"label\", {\n                  children: [\"  \", /*#__PURE__*/_jsx(\"input\", {\n                    type: \"checkbox\"\n                  })]\n                })\n              }))\n            }) : null\n          })]\n        })) : null]\n      })]\n    });\n  }\n\n}\n\nexport default RoomPage;","map":null,"metadata":{},"sourceType":"module"}